<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Data Barang - Aplikasi Kasir</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
      padding-top: 20px;
    }

    .container {
      margin-left: 250px;
      padding-top: 30px;
    }

    /* Sidebar */
    .sidebar {
      background-color: #2575fc;
      color: white;
      height: 100vh;
      padding-top: 30px;
      position: fixed;
      top: 0;
      left: 0;
      width: 250px;
      z-index: 1000;
    }

    .sidebar .nav-link {
      color: #fff !important;
      font-size: 1.1rem;
    }

    .sidebar .nav-link:hover {
      color: #fff !important;
      background-color: #6a11cb;
    }

    .sidebar .btn-danger {
      background-color: #d9534f;
      color: white;
    }

    .sidebar .btn-danger:hover {
      background-color: #c9302c;
    }

    .table th, .table td {
      vertical-align: middle;
      text-align: center;
    }

    .search-bar {
      max-width: 400px;
      margin-bottom: 20px;
    }

    .card {
      border-radius: 15px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .btn-success {
      background-color: #28a745;
      border-color: #28a745;
    }

    .btn-success:hover {
      background-color: #218838;
      border-color: #1e7e34;
    }

    .btn-danger {
      background-color: #dc3545;
      border-color: #dc3545;
    }

    .btn-danger:hover {
      background-color: #c82333;
      border-color: #c82333;
    }

    .btn-warning {
      background-color: #ffc107;
      border-color: #ffc107;
    }

    .btn-warning:hover {
      background-color: #e0a800;
      border-color: #e0a800;
    }
  </style>
</head>
<body>

  <!-- Sidebar -->
  <div class="sidebar">
    <h3 class="text-center text-white">Aplikasi Kasir</h3>
    <ul class="nav flex-column px-3">
      <li class="nav-item">
        <a class="nav-link" href="/products">Data Barang</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/users/view">Data Users</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/view-transactions">Transaksi</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/reports">Laporan</a>
      </li>
      <li class="nav-item">
        <button class="btn btn-danger w-100" onclick="logout()">Logout</button>
      </li>
    </ul>
  </div>

  <!-- Main Content -->
  <div class="container">
    <div class="row">
      <div class="col-lg-10">
        <div class="card p-4">
          <h3 class="text-center mb-4 text-primary">Data Barang</h3>
          <div class="row mb-3">
            <div class="col-md-8">
              <input type="text" id="search" class="form-control search-bar" placeholder="Cari Barang" onkeyup="filterProducts()">
            </div>
            <div class="col-md-4 text-end">
              <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addProductModal">Tambah Barang</button>
            </div>
          </div>
          <table class="table table-striped table-bordered table-hover" id="product-table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Nama Barang</th>
                <th>Harga</th>
                <th>Stok</th>
                <th>Aksi</th>
              </tr>
            </thead>
            <tbody>
              <!-- Products will be injected here -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal for Add Product -->
  <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addProductModalLabel">Tambah Barang</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="addProductForm">
            <div class="mb-3">
              <label for="productName" class="form-label">Nama Barang</label>
              <input type="text" class="form-control" id="productName" required>
            </div>
            <div class="mb-3">
              <label for="productPrice" class="form-label">Harga</label>
              <input type="number" class="form-control" id="productPrice" required>
            </div>
            <div class="mb-3">
              <label for="productStock" class="form-label">Stok</label>
              <input type="number" class="form-control" id="productStock" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
          <button type="button" class="btn btn-success" onclick="saveProduct()">Simpan</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    let editingProductId = null;

    async function fetchProducts() {
      const response = await fetch('http://localhost:3000/products/view');
      const products = await response.json();
      const tableBody = document.querySelector('#product-table tbody');
      tableBody.innerHTML = '';
      products.forEach(product => {
        const row = `<tr>
                      <td>${product.id}</td>
                      <td>${product.name}</td>
                      <td>Rp ${product.price.toLocaleString()}</td>
                      <td>${product.stock}</td>
                      <td class="action-buttons">
                        <button class="btn btn-warning" onclick="editProduct(${product.id})">Edit</button>
                        <button class="btn btn-danger" onclick="deleteProduct(${product.id})">Delete</button>
                      </td>
                    </tr>`;
        tableBody.innerHTML += row;
      });
    }

    function addProduct() {
      // Open the modal to add a new product
      editingProductId = null;
      document.getElementById('addProductForm').reset();
      const addProductModal = new bootstrap.Modal(document.getElementById('addProductModal'));
      addProductModal.show();
    }

    function filterProducts() {
      const searchTerm = document.getElementById('search').value.toLowerCase();
      const rows = document.querySelectorAll('#product-table tbody tr');
      rows.forEach(row => {
        const cells = row.getElementsByTagName('td');
        const nameCell = cells[1].textContent.toLowerCase();
        if (nameCell.includes(searchTerm)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    function saveProduct() {
      const name = document.getElementById('productName').value;
      const price = document.getElementById('productPrice').value;
      const stock = document.getElementById('productStock').value;

      const product = {
        name,
        price,
        stock
      };

      const url = editingProductId 
        ? `http://localhost:3000/products/update/${editingProductId}` 
        : 'http://localhost:3000/products/add';
      
      fetch(url, {
        method: editingProductId ? 'PUT' : 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(product)
      })
      .then(response => response.json())
      .then(() => {
        alert('Data Barang berhasil ditambahkan!');
        fetchProducts();
        const addProductModal = new bootstrap.Modal(document.getElementById('addProductModal'));
        addProductModal.hide();
        document.getElementById('addProductForm').reset();
      })
      .catch(error => console.error('Error adding product:', error));
    }

    function editProduct(id) {
      editingProductId = id;
      fetch(`http://localhost:3000/products/view/${id}`)
        .then(response => response.json())
        .then(product => {
          document.getElementById('productName').value = product.name;
          document.getElementById('productPrice').value = product.price;
          document.getElementById('productStock').value = product.stock;
          const addProductModal = new bootstrap.Modal(document.getElementById('addProductModal'));
          addProductModal.show();
        });
    }

    function deleteProduct(id) {
      if (confirm('Are you sure you want to delete this product?')) {
        fetch(`http://localhost:3000/products/delete/${id}`, {
          method: 'DELETE'
        })
        .then(() => fetchProducts())
        .catch(error => console.error('Error deleting product:', error));
      }
    }

    function logout() {
      localStorage.removeItem('token');
      window.location.href = '/login.html';
    }

    document.addEventListener('DOMContentLoaded', fetchProducts);
  </script>
</body>
</html>
